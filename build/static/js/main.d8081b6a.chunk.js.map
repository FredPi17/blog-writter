{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","editor","state","html","this","init","element","document","getElementById","onChange","setState","defaultParagraphSeparator","defaultContent","actions","name","icon","title","result","exec","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","className","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOAsFeA,G,wDA9Eb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAHRC,OAAS,KAIP,EAAKC,MAAQ,CAAEC,KAAM,MAFH,E,gEAKE,IAAD,OACnBC,KAAKH,OAASI,eAAK,CACjBC,QAASC,SAASC,eAAe,UACjCC,SAAU,SAAAN,GAAI,OAAI,EAAKO,SAAS,CAAEP,UAClCQ,0BAA2B,IAC3BC,eAAgB,wCAChBC,QAAS,CAAC,OAAQ,SAAU,YAAa,gBAAiB,YAAa,QAAS,WAAY,WAAY,QAAS,QAAS,OAAQ,OAAQ,OAAQ,QACpJ,CACEC,KAAM,eACNC,KAAM,IACNC,MAAO,eACPC,OAAQ,kBAAMC,eAAK,iBAErB,CACEJ,KAAM,gBACNC,KAAM,KACNC,MAAO,qBACPC,OAAQ,kBAAMC,eAAK,kBAErB,CACEJ,KAAM,eACNC,KAAM,KACNC,MAAO,oBACPC,OAAQ,kBAAMC,eAAK,iBAErB,CACEJ,KAAM,cACNC,KAAM,IACNC,MAAO,cACPC,OAAQ,kBAAMC,eAAK,YAErB,CACEJ,KAAM,eACNC,KAAM,IACNC,MAAO,eACPC,OAAQ,kBAAMC,eAAK,kB,+BAOrB,OACE,sBAAKC,MAAM,YAAX,UACE,sBAAKA,MAAM,gDAAX,UACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,gBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAlL,SACE,sBAAMP,MAAM,0BAGd,qBAAKA,MAAM,2BAA2BQ,GAAG,yBAAzC,SACE,oBAAIR,MAAM,qBAAV,SACE,oBAAIA,MAAM,kBAAV,SACI,sBAAMA,MAAM,WAAZ,mCAKV,uBACA,8BACE,sBAAKS,UAAU,MAAf,UACA,yCACA,qBAAKD,GAAG,SAASC,UAAU,SAC3B,uBACA,8CACA,qBAAKD,GAAG,cAAR,SAAuBvB,KAAKF,MAAMC,mB,GAzE1B0B,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BsB,M","file":"static/js/main.d8081b6a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { init, exec } from 'pell';\n\nimport 'pell/dist/pell.css'\n\nclass App extends Component {\n  editor = null\n\n  constructor (props) {\n    super(props)\n    this.state = { html: null }\n  }\n\n  componentDidMount () {\n    this.editor = init({\n      element: document.getElementById('editor'),\n      onChange: html => this.setState({ html }),\n      defaultParagraphSeparator: \"p\",\n      defaultContent: \"Contenu par dÃ©fault, changer ici !\",\n      actions: ['bold', 'italic', 'underline', 'strikethrough', 'paragraph', 'quote', 'heading1', 'heading2', 'olist', 'ulist', 'code', 'line', 'link', 'image',\n    {\n      name: 'justify full',\n      icon: \"J\",\n      title: 'Justify text',\n      result: () => exec('justifyFull') \n    },\n    {\n      name: 'justify right',\n      icon: \"JR\",\n      title: 'Justify text right',\n      result: () => exec('justifyRight') \n    },\n    {\n      name: 'justify left',\n      icon: \"JL\",\n      title: 'Justify text left',\n      result: () => exec('justifyLeft')\n    },\n    {\n      name: 'indent text',\n      icon: \"I\",\n      title: 'Indent text',\n      result: () => exec('indent')\n    },\n    {\n      name: 'outdent text',\n      icon: \"O\",\n      title: 'Outdent text',\n      result: () => exec('outdent')\n    },\n  ],\n    })\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a class=\"navbar-brand\" href=\"/\">FP</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n        \n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                  <span class=\"nav-item\">Blog Writter</span>\n                </li>\n            </ul>\n          </div>\n        </nav>\n        <br></br>\n        <div>\n          <div className=\"App\">\n          <h3>Editor:</h3>\n          <div id=\"editor\" className=\"pell\" />\n          <br></br>\n          <h3>HTML Output:</h3>\n          <div id=\"html-output\">{this.state.html}</div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}